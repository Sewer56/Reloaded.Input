<default:ReloadedWindow x:Class="Reloaded.Input.Configurator.WPF.ConfiguratorWindow"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:default="clr-namespace:Reloaded.WPF.Theme.Default;assembly=Reloaded.WPF.Theme.Default"
                        xmlns:utilities="clr-namespace:Reloaded.Input.Configurator.WPF.Utilities"
                        xmlns:localization="clr-namespace:Reloaded.Input.Configurator.Localization"
                        mc:Ignorable="d"
                        Style="{DynamicResource ReloadedWindow}"
                        Title="Reloaded.Input Configurator" 
                        Width="800"
                        MaxHeight="800"
                        SizeToContent="Height">
    <default:ReloadedWindow.Resources>
        <!-- Add some custom button behaviour on invert -->
        <Style x:Key="BindingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>

            <!-- There is probably a better way that doesn't intervene with end users' styles, but for now, we have this. -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInverted}" Value="True">
                    <Setter Property="Opacity" Value="0.66" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </default:ReloadedWindow.Resources>
    <ScrollViewer DataContext="{Binding ViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
        <StackPanel>
            <ComboBox ItemsSource="{Binding Configurations}"
                      IsSynchronizedWithCurrentItem="True"
                      SelectedItem="{Binding SelectedConfiguration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="ConfigurationName"
                      Margin="10" />

            <DataGrid
                x:Name="MappingGrid"
                Margin="10"
                ItemsSource="{Binding SelectedConfiguration.Mappings}"

                HorizontalContentAlignment="Center"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"

                CanUserReorderColumns="False"
                CanUserSortColumns="False"

                AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" IsReadOnly="True" />
                    <DataGridTextColumn Header="Current State" Binding="{Binding CurrentValue}" Width="120" IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="Mapping" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding Slots, UpdateSourceTrigger=PropertyChanged}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" 
                                                        IsItemsHost="True"
                                                        utilities:MarginSetter.Enable="True"
                                                        utilities:MarginSetter.Margin="0 0 10 0" utilities:MarginSetter.LastItemMargin="0"
                                            />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <!-- Bind to self. -->
                                            <Button x:Name="BindingBtn"
                                                    Content="{Binding MappingText, UpdateSourceTrigger=PropertyChanged}" 
                                                    DataContext="{Binding}" 
                                                    Height="30" Padding="10,0,10,0" 
                                                    VerticalAlignment="Center" 
                                                    HorizontalAlignment="Center"
                                                    Click="Click"
                                                    PreviewMouseDown="OnOtherClick"
                                                    IsEnabled="{Binding Parent.IsNotBinding}"
                                                    ToolTip="{x:Static localization:LocalizedStrings.BindButtonTooltip}"
                                                    ToolTipService.InitialShowDelay="0"
                                                    Style="{DynamicResource BindingButton}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
    </ScrollViewer>
</default:ReloadedWindow>
